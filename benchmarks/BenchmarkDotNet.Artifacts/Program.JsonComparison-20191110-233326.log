// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 1 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
Unable to find .sln file. Will use current directory /Users/havarnov/dev/fsharp/nom-fs/benchmarks to search for project file. If you don't use .sln file on purpose it should not be a problem.
// start dotnet restore  /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in /Users/havarnov/dev/fsharp/nom-fs/benchmarks/bin/release/netcoreapp3.0/f3420cf3-e45f-4734-ac70-805179651ed1
// command took 1.59s and exited with 0
// start dotnet build -c Release  --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in /Users/havarnov/dev/fsharp/nom-fs/benchmarks/bin/release/netcoreapp3.0/f3420cf3-e45f-4734-ac70-805179651ed1
// command took 14.43s and exited with 0
// ***** Done, took 00:00:16 (16.12 sec)   *****
// Found 1 benchmarks:
//   JsonComparison.Memory: DefaultJob [Input=basic.json]

// **************************
// Benchmark: JsonComparison.Memory: DefaultJob [Input=basic.json]
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "f3420cf3-e45f-4734-ac70-805179651ed1.dll" --benchmarkName "Program+JsonComparison.Memory(Input: "basic.json")" --job "Default" --benchmarkId 0 in /Users/havarnov/dev/fsharp/nom-fs/benchmarks/bin/release/netcoreapp3.0/f3420cf3-e45f-4734-ac70-805179651ed1/bin/Release/netcoreapp3.0
Failed to set up high priority. Make sure you have the right permissions. Message: Permission denied
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), X64 RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 377978.00 ns, 377.9780 us/op
WorkloadJitting  1: 1 op, 63072189.00 ns, 63.0722 ms/op

WorkloadPilot    1: 2 op, 213499.00 ns, 106.7495 us/op
WorkloadPilot    2: 3 op, 520988.00 ns, 173.6627 us/op
WorkloadPilot    3: 4 op, 534538.00 ns, 133.6345 us/op
WorkloadPilot    4: 5 op, 722870.00 ns, 144.5740 us/op
WorkloadPilot    5: 6 op, 717240.00 ns, 119.5400 us/op
WorkloadPilot    6: 7 op, 966345.00 ns, 138.0493 us/op
WorkloadPilot    7: 8 op, 1118202.00 ns, 139.7752 us/op
WorkloadPilot    8: 9 op, 1328635.00 ns, 147.6261 us/op
WorkloadPilot    9: 10 op, 1418686.00 ns, 141.8686 us/op
WorkloadPilot   10: 11 op, 1530814.00 ns, 139.1649 us/op
WorkloadPilot   11: 12 op, 1747135.00 ns, 145.5946 us/op
WorkloadPilot   12: 13 op, 1905334.00 ns, 146.5642 us/op
WorkloadPilot   13: 14 op, 1962013.00 ns, 140.1438 us/op
WorkloadPilot   14: 15 op, 2095041.00 ns, 139.6694 us/op
WorkloadPilot   15: 16 op, 2145717.00 ns, 134.1073 us/op
WorkloadPilot   16: 32 op, 5239846.00 ns, 163.7452 us/op
WorkloadPilot   17: 64 op, 6136310.00 ns, 95.8798 us/op
WorkloadPilot   18: 128 op, 10470621.00 ns, 81.8017 us/op
WorkloadPilot   19: 256 op, 19205087.00 ns, 75.0199 us/op
WorkloadPilot   20: 512 op, 33134897.00 ns, 64.7166 us/op
WorkloadPilot   21: 1024 op, 69394306.00 ns, 67.7679 us/op
WorkloadPilot   22: 2048 op, 96698662.00 ns, 47.2161 us/op
WorkloadPilot   23: 4096 op, 189875553.00 ns, 46.3563 us/op
WorkloadPilot   24: 8192 op, 324241461.00 ns, 39.5803 us/op
WorkloadPilot   25: 16384 op, 643900793.00 ns, 39.3006 us/op

WorkloadWarmup   1: 16384 op, 633524973.00 ns, 38.6673 us/op
WorkloadWarmup   2: 16384 op, 632728103.00 ns, 38.6187 us/op
WorkloadWarmup   3: 16384 op, 634224516.00 ns, 38.7100 us/op
WorkloadWarmup   4: 16384 op, 636025151.00 ns, 38.8199 us/op
WorkloadWarmup   5: 16384 op, 632399193.00 ns, 38.5986 us/op
WorkloadWarmup   6: 16384 op, 632676100.00 ns, 38.6155 us/op
WorkloadWarmup   7: 16384 op, 639300085.00 ns, 39.0198 us/op
WorkloadWarmup   8: 16384 op, 643937497.00 ns, 39.3028 us/op
WorkloadWarmup   9: 16384 op, 640297298.00 ns, 39.0806 us/op

// BeforeActualRun
WorkloadActual   1: 16384 op, 637446829.00 ns, 38.9067 us/op
WorkloadActual   2: 16384 op, 660594312.00 ns, 40.3195 us/op
WorkloadActual   3: 16384 op, 645078969.00 ns, 39.3725 us/op
WorkloadActual   4: 16384 op, 721357007.00 ns, 44.0281 us/op
WorkloadActual   5: 16384 op, 639820820.00 ns, 39.0516 us/op
WorkloadActual   6: 16384 op, 653544206.00 ns, 39.8892 us/op
WorkloadActual   7: 16384 op, 635372224.00 ns, 38.7800 us/op
WorkloadActual   8: 16384 op, 636525918.00 ns, 38.8505 us/op
WorkloadActual   9: 16384 op, 656131051.00 ns, 40.0471 us/op
WorkloadActual  10: 16384 op, 641636013.00 ns, 39.1624 us/op
WorkloadActual  11: 16384 op, 629064118.00 ns, 38.3950 us/op
WorkloadActual  12: 16384 op, 632089918.00 ns, 38.5797 us/op
WorkloadActual  13: 16384 op, 630998712.00 ns, 38.5131 us/op
WorkloadActual  14: 16384 op, 631877096.00 ns, 38.5667 us/op
WorkloadActual  15: 16384 op, 633624812.00 ns, 38.6734 us/op

// AfterActualRun
WorkloadResult   1: 16384 op, 637446829.00 ns, 38.9067 us/op
WorkloadResult   2: 16384 op, 660594312.00 ns, 40.3195 us/op
WorkloadResult   3: 16384 op, 645078969.00 ns, 39.3725 us/op
WorkloadResult   4: 16384 op, 639820820.00 ns, 39.0516 us/op
WorkloadResult   5: 16384 op, 653544206.00 ns, 39.8892 us/op
WorkloadResult   6: 16384 op, 635372224.00 ns, 38.7800 us/op
WorkloadResult   7: 16384 op, 636525918.00 ns, 38.8505 us/op
WorkloadResult   8: 16384 op, 656131051.00 ns, 40.0471 us/op
WorkloadResult   9: 16384 op, 641636013.00 ns, 39.1624 us/op
WorkloadResult  10: 16384 op, 629064118.00 ns, 38.3950 us/op
WorkloadResult  11: 16384 op, 632089918.00 ns, 38.5797 us/op
WorkloadResult  12: 16384 op, 630998712.00 ns, 38.5131 us/op
WorkloadResult  13: 16384 op, 631877096.00 ns, 38.5667 us/op
WorkloadResult  14: 16384 op, 633624812.00 ns, 38.6734 us/op
GC:  432 0 0 905186080 16384
Threading:  2 0 16384

// AfterAll
// Benchmark Process 36009 has exited with code 0

Mean = 39.0791 us, StdErr = 0.1634 us (0.42%); N = 14, StdDev = 0.6115 us
Min = 38.3950 us, Q1 = 38.5797 us, Median = 38.8786 us, Q3 = 39.3725 us, Max = 40.3195 us
IQR = 0.7928 us, LowerFence = 37.3905 us, UpperFence = 40.5617 us
ConfidenceInterval = [38.3892 us; 39.7689 us] (CI 99.9%), Margin = 0.6899 us (1.77% of Mean)
Skewness = 0.78, Kurtosis = 2.13, MValue = 2

// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts/results/Program.JsonComparison-report.csv
  BenchmarkDotNet.Artifacts/results/Program.JsonComparison-report-github.md
  BenchmarkDotNet.Artifacts/results/Program.JsonComparison-report.html

// * Detailed results *
JsonComparison.Memory: DefaultJob [Input=basic.json]
Runtime = .NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), X64 RyuJIT; GC = Concurrent Workstation
Mean = 39.0791 us, StdErr = 0.1634 us (0.42%); N = 14, StdDev = 0.6115 us
Min = 38.3950 us, Q1 = 38.5797 us, Median = 38.8786 us, Q3 = 39.3725 us, Max = 40.3195 us
IQR = 0.7928 us, LowerFence = 37.3905 us, UpperFence = 40.5617 us
ConfidenceInterval = [38.3892 us; 39.7689 us] (CI 99.9%), Margin = 0.6899 us (1.77% of Mean)
Skewness = 0.78, Kurtosis = 2.13, MValue = 2
-------------------- Histogram --------------------
[38.323 us ; 39.703 us) | @@@@@@@@@@@
[39.703 us ; 40.541 us) | @@@
---------------------------------------------------

// * Summary *

BenchmarkDotNet=v0.12.0, OS=macOS 10.15 (19A602) [Darwin 19.0.0]
Intel Core i7-6567U CPU 3.30GHz (Skylake), 1 CPU, 4 logical and 2 physical cores
.NET Core SDK=3.0.100
  [Host]     : .NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), X64 RyuJIT DEBUG
  DefaultJob : .NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), X64 RyuJIT


| Method |      Input |     Mean |    Error |   StdDev |   Gen 0 | Gen 1 | Gen 2 | Allocated |
|------- |----------- |---------:|---------:|---------:|--------:|------:|------:|----------:|
| Memory | basic.json | 39.08 us | 0.690 us | 0.612 us | 26.3672 |     - |     - |  53.95 KB |

// * Hints *
Outliers
  JsonComparison.Memory: Default -> 1 outlier  was  removed (44.03 us)

// * Legends *
  Input     : Value of the 'Input' parameter
  Mean      : Arithmetic mean of all measurements
  Error     : Half of 99.9% confidence interval
  StdDev    : Standard deviation of all measurements
  Gen 0     : GC Generation 0 collects per 1000 operations
  Gen 1     : GC Generation 1 collects per 1000 operations
  Gen 2     : GC Generation 2 collects per 1000 operations
  Allocated : Allocated memory per single operation (managed only, inclusive, 1KB = 1024B)
  1 us      : 1 Microsecond (0.000001 sec)

// * Diagnostic Output - MemoryDiagnoser *


// ***** BenchmarkRunner: End *****
// ** Remained 0 benchmark(s) to run **
Run time: 00:00:18 (18.43 sec), executed benchmarks: 1

Global total time: 00:00:34 (34.56 sec), executed benchmarks: 1
// * Artifacts cleanup *
